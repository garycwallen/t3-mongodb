datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model Post {
    id          String   @id @default(auto()) @map("_id") @db.ObjectId
    name        String
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt
    createdBy   User     @relation(fields: [createdById], references: [id])
    createdById String   @db.ObjectId
    @@index([name])
}

// Necessary for Next auth
model Account {
    id                String @id @default(auto()) @map("_id") @db.ObjectId
    userId            String @db.ObjectId
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? 
    access_token      String? 
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? 
    session_state     String?
    user              User    @relation(fields: [userId], references: [id])
    @@unique([provider, providerAccountId])
}

model Session {
  id              String      @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken    String      @unique
  userId          String      @db.ObjectId
  expires         DateTime    @map("expiresAt")
  user            User        @relation(fields: [userId], references: [id])
  @@map("sessions")
}

model User {
  id              String      @id @default(auto()) @map("_id") @db.ObjectId
  email           String      @unique
  name            String
  image           String
  createdAt       DateTime    @default(now())
  emailVerified   DateTime?   @map("verifiedAt")
  session         Session[]
  post            Post[]
  account         Account[]
  @@map("users")
}

model VerificationToken {
  id              String      @id @default(auto()) @map("_id") @db.ObjectId
  identifier      String
  token           String      @unique
  expires         DateTime    @map("expiresAt")
  @@unique([identifier, token])
  @@map("verification_tokens")
}
